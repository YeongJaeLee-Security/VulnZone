package ExploitsUtil;

import java.time.Instant;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpSession;

import ExploitsParam.WeakSessionParams;

public class WeakSession implements ExploitLevel<Void, WeakSessionParams>{
	public WeakSession() {

	}

	@Override
	public Void easy(WeakSessionParams params) {
		if (params == null) { return null; }

		if (params.getRequest().getMethod().equalsIgnoreCase("POST")) {
			HttpSession session = params.getRequest().getSession(true);

			Integer lastSessionId = (Integer) session.getAttribute("last_session_id");
			if (lastSessionId == null) { lastSessionId = 0; }

			lastSessionId++;
			session.setAttribute("last_session_id", lastSessionId);

			Cookie sessionCookie = new Cookie("VulnZoneSession", lastSessionId.toString());
			params.getResponse().addCookie(sessionCookie);
		}
		
		return null;
	}

	@Override
	public Void hard(WeakSessionParams params) {
		if (params == null) { return null; }

		if (params.getRequest().getMethod().equalsIgnoreCase("POST")) {
			long currentTime = Instant.now().getEpochSecond();
			
			Cookie sessionCookie = new Cookie("VulnZoneSession", String.valueOf(currentTime));
			params.getResponse().addCookie(sessionCookie);
		}

		return null;
	}
}