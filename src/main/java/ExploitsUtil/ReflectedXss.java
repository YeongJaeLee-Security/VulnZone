package ExploitsUtil;

import ExploitsParam.ReflectedXssParams;

public class ReflectedXss implements ExploitLevel<String, ReflectedXssParams> {
	public ReflectedXss() {

	}

	@Override
	public String easy(ReflectedXssParams params) {
		if (params == null) { return null; }

		if (params.getRequest().getParameter("Submit") != null && params.getRequest().getParameter("name") != null) {
			params.getResponse().setHeader("X-XSS-Protection", "0");
			
			String name = params.getRequest().getParameter("name");
			if (name != null && !name.isEmpty()) {
				return "Hello " + name;
			}
		}

		return null;
	}

	@Override
	public String hard(ReflectedXssParams params) {
		if (params == null) { return null; }

		if (params.getRequest().getParameter("Submit") != null && params.getRequest().getParameter("name") != null) {
			params.getResponse().setHeader("X-XSS-Protection", "0");
			
			String name = params.getRequest().getParameter("name");
			if (name != null && !name.isEmpty()) {
				name = name.replace("<script>", "");
				
				return "Hello " + name;
			}
		}

		return null;
	}
}