package ExploitsUtil;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import ExploitsParam.BlindSQLInjectionParams;
import common.DataBase;

public class BlindSQLInjection implements ExploitLevel<String, BlindSQLInjectionParams> {
	private DataBase database;
	private Connection conn;
	private Statement stmt;
	private ResultSet rs;
	private boolean exists;
	private final static String RESULT_MESSAGE_SUCCESS = "User ID exists in the database.";
	private final static String RESULT_MESSAGE_FAIL = "User ID is MISSING from the database.";

	public BlindSQLInjection() {
		try {
			this.database = new DataBase();
			this.conn = DriverManager.getConnection(database.getDbURL() + database.getDbName(), database.getDbID(), database.getDbPassword());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public String easy(BlindSQLInjectionParams params) {
		if (params == null) { 
			return null;
		}

		if (params.getRequest().getParameter("Submit") != null) {
			exists = false;

			try {
				String id = params.getRequest().getParameter("id");
				stmt = conn.createStatement();

				// 원래는 Prepared Statement 써서 id를 바인딩
				String query = "SELECT id, userName, userGender FROM hackable_user WHERE id = '" + id + "';";
				rs = stmt.executeQuery(query);

				exists = rs.next();
			} catch (Exception e) {
				e.printStackTrace();

				exists = false;
			} finally {
				if (rs != null) try { rs.close(); } catch (SQLException ignored) {}
				if (stmt != null) try { stmt.close(); } catch (SQLException ignored) {}
				if (conn != null) try { conn.close(); } catch (SQLException ignored) {}
			}

			return exists ? RESULT_MESSAGE_SUCCESS : RESULT_MESSAGE_FAIL;
		}

		return null;
	}

	@Override
	public String hard(BlindSQLInjectionParams params) {
		if (params == null) { 
			return null;
		}

		if (params.getRequest().getMethod().equalsIgnoreCase("POST") && params.getRequest().getParameter("Submit") != null) {
			exists = false;

			try {
				String id = params.getRequest().getParameter("id");
				id = id.replaceAll("(['\"\\\\])", "\\\\$1");
				// 원래는 Prepared Statement 써야함
				stmt = conn.createStatement();

				// ? 바인딩 안되는 곳은 사용자 입력 X 
				String query = "SELECT id, userName, userGender FROM hackable_user WHERE id = " + id + ";";
				rs = stmt.executeQuery(query);

				exists = rs.next();
			} catch (Exception e) {
				e.printStackTrace();

				exists = false;
			} finally {
				if (rs != null) try { rs.close(); } catch (SQLException ignored) {}
				if (stmt != null) try { stmt.close(); } catch (SQLException ignored) {}
				if (conn != null) try { conn.close(); } catch (SQLException ignored) {}
			}

			return exists ? RESULT_MESSAGE_SUCCESS : RESULT_MESSAGE_FAIL;
		}
		
		return null;
	}
}