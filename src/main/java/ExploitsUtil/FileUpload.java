package ExploitsUtil;

import java.io.File;

import javax.servlet.ServletContext;
import ExploitsParam.FileUploadParams;

import com.oreilly.servlet.MultipartRequest;

public class FileUpload implements ExploitLevel<String, FileUploadParams> {
	private static final String UPLOAD_PATH = "/uploads";
	private final int MAX_FILE_SIZE = 100 * 1024; //100KB

	private String path;
	private File uploadDir;

	public FileUpload(ServletContext context) {
		this.path = context.getRealPath(UPLOAD_PATH);
		this.uploadDir = new File(path);

		if (!uploadDir.exists()) {
			uploadDir.mkdir();
		}
	}

	@Override
	public String low(FileUploadParams params) {
		if (params == null) {
			return null;
		}
		
		if (params.getRequest().getMethod().equalsIgnoreCase("POST")) {
			try {
				MultipartRequest multipartRequest = new MultipartRequest(params.getRequest(), path, "UTF-8");
				File uploadedFile = multipartRequest.getFile("uploaded");
				
				if (uploadedFile != null) {
					return "/uploads/" + uploadedFile.getName() + " successfully uploaded!";
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		return null;
	}

	@Override
	public String hard(FileUploadParams params) {
		if (params == null) {
			return null;
		}
		
		if (params.getRequest().getMethod().equalsIgnoreCase("POST")) {
			try {
				MultipartRequest multipartRequest = new MultipartRequest(params.getRequest(), path, MAX_FILE_SIZE, "UTF-8");
				File uploadedFile = multipartRequest.getFile("uploaded");
				
				if (uploadedFile != null) {
					String fileType = multipartRequest.getContentType("uploaded");
					
					if ((fileType.equals("image/jpeg")) || fileType.equals("image/png") && uploadedFile.length() <= MAX_FILE_SIZE) {
						return "/uploads/" + uploadedFile.getName() + " successfully uploaded!";
					} else {
						uploadedFile.delete();
						return "Your image was not uploaded. We can only accept JPEG or PNG images.";
					}
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
 
		return null;
	}
}