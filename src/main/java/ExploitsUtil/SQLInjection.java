package ExploitsUtil;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import ExploitsParam.SQLInjectionParams;
import common.DataBase;

public class SQLInjection implements ExploitLevel<String, SQLInjectionParams> {
	private DataBase database;
	private Connection conn;
	private Statement stmt;
	private ResultSet rs;
	private StringBuilder result;

	public SQLInjection() {
		try {
			this.database = new DataBase();
			this.conn = DriverManager.getConnection(database.getDbURL() + database.getDbName(), database.getDbID(), database.getDbPassword());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public String easy(SQLInjectionParams params) {
		if (params == null) { 
			return null;
		}

		if (params.getRequest().getParameter("Submit") != null) {
			try {
				String id = params.getRequest().getParameter("id");		
				stmt = conn.createStatement();

				// 원래는 Prepared Statement 써서 id를 바인딩
				String query = "SELECT id, userName, userGender FROM " + database.getSqlTableName() + " WHERE id = '" + id + "';";
				rs = stmt.executeQuery(query);
				result = new StringBuilder();

				while (rs.next()) {
					String userIDNumber = rs.getString("id");
					String userName = rs.getString("userName");
					String userGender = rs.getString("userGender");

					result.append("ID : " + userIDNumber + "\nName : " + userName + "\nGender : " + userGender + "\n");
				}

				return result.toString();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				if (stmt != null) try { stmt.close(); } catch (SQLException ignored) {}
				if (conn != null) try { conn.close(); } catch (SQLException ignored) {}
			}
		}

		return null;
	}

	@Override
	public String hard(SQLInjectionParams params) {
		if (params == null) { 
			return null;
		}

		if (params.getRequest().getMethod().equalsIgnoreCase("POST") && params.getRequest().getParameter("Submit") != null) {
			try {
				String id = params.getRequest().getParameter("id");
				id = id.replaceAll("(['\"\\\\])", "\\\\$1");
				// 원래는 Prepared Statement 써야함
				stmt = conn.createStatement();

				// ? 바인딩 안되는 곳은 사용자 입력 X 
				String query = "SELECT id, userName, userGender FROM " + database.getSqlTableName() + " WHERE id = " + id + ";";
				rs = stmt.executeQuery(query);
				result = new StringBuilder();

				while (rs.next()) {
					String userIDNumber = rs.getString("id");
					String userName = rs.getString("userName");
					String userGender = rs.getString("userGender");

					result.append("ID : " + userIDNumber + "\nName : " + userName + "\nGender : " + userGender + "\n");
				}

				return result.toString();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				if (stmt != null) try { stmt.close(); } catch (SQLException ignored) {}
				if (conn != null) try { conn.close(); } catch (SQLException ignored) {}
			}
		}

		return null;
	}

	public int userCount() {
		try {
			stmt = conn.createStatement();
			String query = "SELECT COUNT(*) FROM " + database.getSqlTableName();
			rs = stmt.executeQuery(query);

			if (rs.next()) {
				return rs.getInt(1);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return 0;
	}
}